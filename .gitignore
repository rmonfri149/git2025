# Creado por https://www.toptal.com/developers/gitignore/api/java,eclipse,python
# Editar en https://www.toptal.com/developers/gitignore?templates=java,eclipse,python

### Eclipse ###
.metadatos
papelera/
temporal/
*.tmp
*.bak
*.swp
*~.nib
propiedades locales
.ajustes/
.ruta de carga
.recomendadores

# Constructores de herramientas externas
.constructoresdeherramientasexternas/

# "Configuraciones de lanzamiento de Eclipse" almacenadas localmente
*.lanzamiento

# Específico de PyDev (IDE de Python para Eclipse)
*.pydevproyecto

# Herramientas de desarrollo específicas de CDT (C/C++)
.cproyecto

# CDT-herramientas automáticas
.herramientas automáticas

# Procesador de anotaciones de Java (APT)
.ruta de fábrica

# Herramientas de desarrollo específicas de PDT (PHP)
.ruta de construcción

# complemento sbteclipse
.objetivo

# Complemento Tern
proyecto .tern

# Complemento TeXlipse
.texlipse

# STS (Conjunto de herramientas Spring)
.frijoles de primavera

# Recomendadores de código
.recomendadores/

# Procesamiento de anotaciones
.apt_generado/
.apt_prueba_generada/

# Específico de Scala IDE (desarrollo de Scala y Java para Eclipse)
.cache-principal
.scala_dependencies
.hoja de trabajo

# Descomente esta línea si desea ignorar el archivo de descripción del proyecto.
# Normalmente, este archivo se rastreará si contiene configuraciones de compilación/dependencia:
* .proyecto

### Parche de Eclipse ###
# Herramientas de arranque de primavera
.sts4-cache/

### Java ###
# Archivo de clase compilado
*.clase

# Archivo de registro
*.registro

# Archivos BlueJ
*.ctxt

# Herramientas móviles para Java (J2ME)
.mtj.tmp/

# Archivos de paquete #
*.frasco
*.guerra
*.nar
*.oreja
*.cremallera
*.tar.gz
*.rar

# registros de fallos de la máquina virtual, consulte http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*
pid de reproducción*

### Pitón ###
# Archivos DLL compilados en bytes / optimizados
__pycache__/
*.py[bacalao]
*$py.clase

# Extensiones de C
*.entonces

# Distribución / embalaje
.Pitón
construir/
huevos en desarrollo/
dist/
descargas/
huevos/
.huevos/
lib/
lib64/
regiones/
sdist/
var/
ruedas/
compartir/python-wheels/
*.egg-info/
.instalado.cfg
*.huevo
MANIFIESTO

# PyInstaller
# Generalmente, estos archivos se escriben mediante un script de Python a partir de una plantilla.
# antes de que PyInstaller construya el exe, para poder inyectarle fecha y otra información.
*.manifiesto
*.especulación

# Registros del instalador
pip-log.txt
pip-eliminar-este-directorio.txt

# Informes de pruebas unitarias/cobertura
htmlcov/
.toxic/
.nox/
.cobertura
.cobertura.*
.cache
pruebas de nariz.xml
cobertura.xml
*.cubrir
*.py,portada
.hipótesis/
.pytest_cache/
cubrir/

# Traducciones
*.mes
*.olla

# Cosas de Django:
configuración_local.py
db.sqlite3
diario db.sqlite3

# Cosas del matraz:
instancia/
.webassets-cache

# Cosas raras:
.desordenado

# Documentación de Sphinx
docs/_build/

# PyBuilder
.pybuilder/
objetivo/

# Cuaderno Jupyter
.ipynb_puntos de control

#IPython
perfil_predeterminado/
ipython_config.py

#pyenv
# Para una biblioteca o un paquete, es posible que desees ignorar estos archivos ya que el código es
# destinados a ejecutarse en múltiples entornos; de lo contrario, regístrelos en:
# .python-version

# pipenv
# Según pypa/pipenv#598, se recomienda incluir Pipfile.lock en el control de versiones.
# Sin embargo, en caso de colaboración, si tiene dependencias o dependencias específicas de la plataforma
# al no tener soporte multiplataforma, pipenv puede instalar dependencias que no funcionan o no
# instalar todas las dependencias necesarias.
#Pipfile.lock

# poesía
# Similar a Pipfile.lock, generalmente se recomienda incluir poetry.lock en el control de versiones.
# Esto se recomienda especialmente para paquetes binarios para garantizar la reproducibilidad y es más
# comúnmente ignorado por las bibliotecas.
# https://python-poetry.org/docs/basic-usage/#confirmar-su-archivo-poetrylock-al-control-de-versiones
#poesía.bloqueo

#pdm
# Similar a Pipfile.lock, generalmente se recomienda incluir pdm.lock en el control de versiones.
#pdm.lock
# pdm almacena configuraciones de todo el proyecto en .pdm.toml, pero se recomienda no incluirlo
# en el control de versiones.
# https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; utilizado por ejemplo en github.com/David-OConnor/pyflow y github.com/pdm-project/pdm
__pypackages__/

# Cosas de apio
horario de celerybeat
celerybeat.pid

# Archivos analizados por SageMath
*.sage.py

# Entornos
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Configuración del proyecto Spyder
* .proyecto spyder
.proyecto espía

# Configuración del proyecto de cuerda
.proyecto de cuerda

# Documentación de mkdocs
/sitio

#mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Comprobador de tipo Pyre
.pira/

# analizador de tipos estáticos pytype
.pytype/

# Símbolos de depuración de Cython
depuración de cython/

#PyCharm
# La plantilla específica de JetBrains se mantiene en un JetBrains.gitignore separado que puede
# se puede encontrar en https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
# y se puede agregar al gitignore global o fusionarlo en este archivo. Para una versión más nuclear
# Opción (no recomendada) puedes descomentar lo siguiente para ignorar toda la carpeta de ideas.
#.idea/

### Parche de Python ###
# Archivo de configuración local de Poetry: https://python-poetry.org/docs/configuration/#local-configuration
poesía.toml

# gorguera
.ruff_cache/

# Archivos de configuración LSP
pyrightconfig.json

# Fin de https://www.toptal.com/developers/gitignore/api/java,eclipse,python